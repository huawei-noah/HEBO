[tool.poetry]
name = "agent"
version = "0.2.0"
description = ""
authors = ["Filippos Christianos <filippos.christianos@huawei.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "~3.10"

hydra-core = "^1.3.2"
hydra-colorlog = "^1.2.0"
hydra-joblib-launcher = "^1.2.0"

rich = "^13.7.0"
typer = "^0.9.0"

openai = "^1.11.1"
pydantic = ">1.10.*,<2"
jellyfish = "^1.0.1"
jinja2 = "^3.1.2"
pyrootutils = "^1.0.4"
tenacity = "^8.2.3"

tiktoken = "^0.5.2"

transformers = "^4.37.2"
datasets = "^2.15.0"

torch = { version = "^2.1.2", optional = true }
vllm = { version = "^0.2.5", optional = true }
fschat = { version = "^0.2.34", optional = true }
einops = {version = "^0.7.0", optional = true}

accelerate = { version = "^0.26.1", optional = true }
peft = { version = "^0.8.1", optional = true }
bitsandbytes = { version = "^0.42.0", optional = true }
trl = { version = "^0.7.4", optional = true }
tensorboard = { version = "^2.15.1", optional = true }

babyai = { git = "https://github.com/semitable/babyai-text.git", develop = true, subdirectory = "babyai", optional = true }
gym_minigrid = { git = "https://github.com/semitable/babyai-text.git", develop = true, subdirectory = "gym-minigrid", optional = true }
babyai_text = { git = "https://github.com/semitable/babyai-text.git", develop = true, subdirectory = "babyai-text", optional = true }
alfworld = {git = "https://github.com/tlc4418/alfworld.git", branch = "yl-dependency-fix", optional = true}
humaneval = { path = "third_party/humaneval", develop = true, optional = true}
web_agent_site = { path = "third_party/WebShop", develop = true, optional = true }
TextWorld = { git = "https://github.com/ethanluoyc/TextWorld.git", branch = "dependency-fix", optional = true }
fast-downward = { url = "https://github.com/MarcCote/downward/archive/faster_replan.zip", optional = true }
langchain = "^0.1.5"
faiss-cpu = "^1.7.4"

google-api-python-client = "2.117.0"

langchain-community = "^0.0.21"
unstructured = {extras = ["pdf"], version = "^0.12.4"}
mlrq = "0.1.5"

[tool.poetry.extras]
backend = ["torch", "vllm", "fschat", "einops"]
training = ["peft", "bitsandbytes", "trl", "tensorboard", "accelerate"]
alfworld = ["alfworld", "TextWorld", "fast-downward"]
babyai = ["babyai", "gym_minigrid", "babyai_text"]
humaneval = ["humaneval"]
webshop = ["web_agent_site"]

[tool.poetry.group.dev.dependencies]
neovim = "^0.3.1"
black = "^23.7.0"
ipython = "^8.14.0"
ruff = "^0.2.0"
pytest = "^8.0.0"
pre-commit = "^3.4.0"
huggingface-hub = {version = "^0.20.3", extras = ["cli"]}

# for dependencies:
poetry = "1.7.1" # MUST BE THE SAME AS IN environment.yaml

# for docs:
sphinx = "^7.2.6"
myst-parser = "^2.0.0"
sphinx-tabs = "^3.4.5"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.github
  | \.venv
  | docs
  | third_party
  | scratch
)/
'''

[tool.ruff]
line-length = 120

exclude = [".venv", "third_party"]

[tool.ruff.lint]
select = [
  "E", # pycodestyle
  "F", # pyflakes
  "I", # isort
]
ignore = ["E731", "E402"]

[tool.ruff.lint.extend-per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["agent"]
force-single-line = true
single-line-exclusions = ["typing"]
known-third-party = ["datasets"]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]
